QUE ES HTTP =>
Es la forma o el protocolo en que se comunica un cliente y un servidor, el
cliente hace las peticiones o pide los servicios que necesita y el servidor
los escucha y los sirve a sus clientes.

SERVICIOS O PETICIONES A UN SERVIDOR => 
Existen diversas formas o métodos, para hacer peticiones a través del protocolo
global, que es el protocolo HTTP a un servidor, las más utilizadas y conocidas
son:

1.GET => Para obtener datos o información del servidor y a su vez, este la pide
         al servidor de la BD.
2.POST => Para crear Y/O ingresar datos en el servidor y a su vez, este se los
          entrega al servidor de la BD.
3.PUT => Para Actualizar datos en el servidor y a su vez, este se lo indica al
         servidor de la BD.
4.DELETE => Para eliminar información o datos en el servidor y a su vez, este
            se lo indica al servidor de la BD.

PUT =>  (req.params.id) => Para obtener el id.
DELETE => (req.params.id) => Para obtener el id.

POST => body-parser.
PUT => body-parser.
DELETE => body-parser.

NOTA => La Base De Datos esta conectada directamente al servidor y el cliente
        hace peticiones al servidor y este a su vez, se las indica al servidor
        de la BD, como es el caso de MongoDB, en conclusión, el cliente
        hace peticiones al servidor y a su vez, este se las indica al servidor
        de la BD y a su vez, esta se la devuelve al servidor y el servidor
        se la indica al cliente y el Navegador las renderiza por pantalla y asi,
        el usuario interactua con el Sistema De Información.

QUE ES UNA API =>
Es la creación de rutas exclusivas para aplicaciones o clientes externos. es
decir, otro cliente diferente al cliente original para el cual se construyo la
interactividad con el servidor. Y por medio de estas rutas exclusivas o tambien,
se conocen como servicios se pueden comunicar con dicho servidor y así
interacturar con los datos, para renderizarlos en su propia aplicación o
pagina web.

QUE ES UNA REST API =>
Son las reglas que se estandarizaron para crear y escribir las rutas para las
APIs y tener buenas practicas en estas rutas para el acceso de las mismas por
cualquier otro Sistema de información.
------------------------------------------------------------------------------
PROYECTO DESDE CERO =>
PAQUETES NECESARIOS PARA EL PROYECTO =>
npm init --yes => (Lo crea de forma inmediata, sin hacer preguntas).
npm i express morgan => (Crea los paquetes(Clases) de express y morgan).
      express => (FrameWork o libreria de nodeJS, No es nativo de nodeJS).
      morgan => (Nos permite ver por consola las peticiones que van llegando).
      body-parser => (Para obtener la información que envío por el POST o actualizó
                      por el PUT; a traves de formularios de la aplicación o por lo
                      que se inserta por postman).

BODY-PARSER =>
Este paquete procesa la información y la serializa en un objeto JSON, para
que así sean facilmente procesada en las peticiones POST.

MIDDLEWARE (app.use) =>
Son funciones o métodos que procesan datos, antes de ser recibidos por el
servidor.Antes de hacer una petición o utilizar un servicio del servidor
se va a ejecutar un middleware siempre.
Morgan = me permite ver por consola lo que va llegando al servidor y a la vez
         lo que el servidor sirve.

PROCESS => Es un objeto GLOBAL que esta corriendo en toda la
           aplicación de nodeJS. Y dicho objeto es actualizado
           dependiendo del entorno(Producción O Desarrollo) en
          el que esta corriendo.
          /* MODIFICANDO EL OBJETO GLOBAL PROCESS
          Y ES UNA VARIABLE DE PUERTO QUE EXISTE Y
          EN HEROKU EL LA ACTUALIZA POR NOSOTROS, PERO
          MIENTRAS ESTEMOS EN EL LOCALHOST, EL SERVIDOR
          VA A UTILIZAR EL PUERTO 3000 O EL QUE SE DESEE
          ASIGNAR */
------------------------------------------------------------------------------

CUANDO INGRESAR UNA RUTA EN UNA VARIABLE O CONSTANTE:
Cuando posteriormente yo utilice alguno o varios de los atributos o metodos
de esa clase u objeto que metí en esa constante o variable. Sino es así, no
tengo necesidad de meterla en una variable, solo requiero su path o ruta.

EXPORTAR ARCHIVOS E IMPORTAR ARCHIVOS:
Cuando yo quiero utilizar elementos de un archivo en otro
debo importar un elmento y ese archivo donde se va a utilizar ese 
elemento debe requerirlo o importarlo.
------------------------------------------------------------------------------

UNDERSCORE =>
Es una liberia que me sirve para validar cuales son los campos permitidos que se van a poder modificar o ACTUALIZAR en una base de datos no relacional de un objeto, por el usuario en el frontend.